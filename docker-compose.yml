version: '3.7'

services:
  # 1. KAFKA INFRASTRUCTURE
  zookeeper:
    image: bitnami/zookeeper:latest
    ports:
      - "2181:2181"
    environment:
      - ALLOW_ANONYMOUS_LOGIN=yes
    volumes:
      - zookeeper_data:/bitnami/zookeeper
    networks:
      - data-network

  kafka:
    image: bitnami/kafka:latest
    ports:
      - "9092:9092"
    environment:
      - KAFKA_CFG_ZOOKEEPER_CONNECT=zookeeper:2181
      - KAFKA_CFG_LISTENERS=PLAINTEXT://:9092
      - KAFKA_CFG_ADVERTISED_LISTENERS=PLAINTEXT://kafka:9092
      - KAFKA_CFG_AUTO_CREATE_TOPICS_ENABLE=true
    depends_on:
      - zookeeper
    volumes:
      - kafka_data:/bitnami/kafka
    networks:
      - data-network

  # 2. AIRFLOW INFRASTRUCTURE
  airflow-postgres:
    image: postgres:13
    environment:
      - POSTGRES_USER=airflow
      - POSTGRES_PASSWORD=airflow
      - POSTGRES_DB=airflow
    volumes:
      - airflow_db_data:/var/lib/postgresql/data
    networks:
      - data-network

  airflow-webserver:
    image: apache/airflow:2.7.2
    command: webserver
    ports:
      - "8080:8080"
    environment:
      - AIRFLOW__CORE__EXECUTOR=LocalExecutor
      - AIRFLOW__CORE__SQL_ALCHEMY_CONN=postgresql+psycopg2://airflow:airflow@airflow-postgres/airflow
      - AIRFLOW__WEBSERVER__SECRET_KEY=temporary_secret_key
      - AIRFLOW__WEBSERVER__EXPOSE_CONFIG=true
      - AIRFLOW__CORE__LOAD_EXAMPLES=false
      - AIRFLOW__API__AUTH_BACKENDS=airflow.api.auth.backend.basic_auth
    depends_on:
      - airflow-postgres
    volumes:
      - ./dags:/opt/airflow/dags
      - ./logs:/opt/airflow/logs
      - ./plugins:/opt/airflow/plugins
      - /var/run/docker.sock:/var/run/docker.sock  # Needed for SparkSubmitOperator
    networks:
      - data-network

  airflow-scheduler:
    image: apache/airflow:2.7.2
    command: scheduler
    environment:
      - AIRFLOW__CORE__EXECUTOR=LocalExecutor
      - AIRFLOW__CORE__SQL_ALCHEMY_CONN=postgresql+psycopg2://airflow:airflow@airflow-postgres/airflow
      - AIRFLOW__WEBSERVER__SECRET_KEY=temporary_secret_key
      - AIRFLOW__CORE__LOAD_EXAMPLES=false
    depends_on:
      - airflow-postgres
      - airflow-webserver
    volumes:
      - ./dags:/opt/airflow/dags
      - ./logs:/opt/airflow/logs
      - ./plugins:/opt/airflow/plugins
    networks:
      - data-network

  # 3. SPARK CLUSTER (Standalone Mode)
  spark-master:
    image: bitnami/spark:3.5.0
    command: /opt/bitnami/spark/bin/spark-class org.apache.spark.deploy.master.Master
    ports:
      - "8081:8080"   # Spark Web UI
      - "7077:7077"   # Spark Master Port
    environment:
      - SPARK_MODE=master
      - SPARK_RPC_AUTHENTICATION_ENABLED=false
      - SPARK_RPC_ENCRYPTION_ENABLED=false
      - SPARK_LOCAL_STORAGE_ENCRYPTED=false
      - SPARK_SSL_ENABLED=false
    networks:
      - data-network

  spark-worker:
    image: bitnami/spark:3.5.0
    command: /opt/bitnami/spark/bin/spark-class org.apache.spark.deploy.worker.Worker spark://spark-master:7077
    environment:
      - SPARK_MODE=worker
      - SPARK_MASTER_URL=spark://spark-master:7077
    depends_on:
      - spark-master
      - kafka
    networks:
      - data-network

  # 4. REDDIT PRODUCER
  reddit-producer:
    build: ./reddit-producer   # <-- folder containing Dockerfile & producer.py
    depends_on:
      - kafka
    env_file:
      - ./.env
    networks:
      - data-network

# Volume Definitions (Persistence)
volumes:
  zookeeper_data:
  kafka_data:
  airflow_db_data:

# Network Definition (Shared internal bridge)
networks:
  data-network:
    driver: bridge
